{"version":3,"sources":["components/Redux/Contacts/contacts-actions.jsx","components/Redux/Contacts/contacts-reducer.jsx","components/Redux/store.js","components/Redux/Contacts/contacts-selectors.jsx","components/Redux/Contacts/contacts-operations.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","changeFilter","items","createReducer","state","payload","filter","id","loading","error","_","action","combineReducers","store","configureStore","reducer","contacts","contactsReducer","devTools","process","getContacts","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","axios","defaults","baseURL","ContactForm","useSelector","dispatch","useDispatch","onSubmit","number","contact","actions","post","then","data","catch","addContact","useState","setName","setNumber","event","preventDefault","namesIsIn","reduce","acc","numbersIsIn","alert","contactCheck","type","value","placeholder","onChange","currentTarget","Filter","e","target","ContactList","onDeleteContact","contactId","delete","map","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af8639c4.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContactRequest = createAction(\"phonebook/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"phonebook/addContactSuccsess\");\r\nexport const addContactError = createAction(\"phonebook/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"phonebook/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"phonebook/deleteContactSuccsess\"\r\n);\r\nexport const deleteContactError = createAction(\"phonebook/deleteContactError\");\r\n\r\nexport const fetchContactRequest = createAction(\r\n  \"phonebook/fetchContactRequest\"\r\n);\r\nexport const fetchContactSuccess = createAction(\r\n  \"phonebook/fetchContactSuccsess\"\r\n);\r\nexport const fetchContactError = createAction(\"phonebook/fetchContactError\");\r\n\r\nexport const changeFilter = createAction(\"phonebook/changeFilter\");\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  changeFilter,\r\n} from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (state, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactError]: (_, action) => action.payload,\r\n  [fetchContactRequest]: () => null,\r\n  [addContactRequest]: () => null,\r\n  [deleteContactRequest]: () => null,\r\n  [deleteContactError]: (_, action) => action.payload,\r\n  [addContactError]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"../Redux/Contacts/contacts-reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\nexport const getError = (state) => state.contacts.error;\r\nexport const getLoading = (state) => state.contacts.loading;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import axios from \"axios\";\r\nimport * as actions from \"./contacts-actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:1507\";\r\n\r\nexport const addContact = (name, number) => (dispatch) => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(actions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(actions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`./contacts/${contactId}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(actions.deleteContactError(error)));\r\n};\r\n\r\nexport const fetchContacts = () => (dispatch) => {\r\n  dispatch(actions.fetchContactRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.fetchContactError(error)));\r\n};\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../Redux/Contacts/contacts-selectors';\r\nimport { addContact } from '../Redux/Contacts/contacts-operations';\r\n\r\n\r\nfunction ContactForm() {\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n   const onSubmit = (name, number) =>\r\n    dispatch(addContact(name, number));\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contactCheck = () => {\r\n    const namesIsIn = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.name],\r\n      [],\r\n    );\r\n    const numbersIsIn = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.number],\r\n      [],\r\n    );\r\n\r\n    if (namesIsIn.includes(name) || numbersIsIn.includes(number)) {\r\n      alert(`${name}${number} Already exist`);\r\n    }\r\n\r\n    if (name === '' || number === '') {\r\n      alert('Not enough data');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    setName('');\r\n    setNumber('');\r\n    if (contactCheck()) {\r\n      return;\r\n    }\r\n\r\n    onSubmit(name, number);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} >\r\n      <label >\r\n        Name:\r\n          <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          placeholder=\"Jack Sparrow\"\r\n          onChange={event => setName(event.currentTarget.value)}\r\n          \r\n        />\r\n      </label>\r\n\r\n      <label >\r\n        Number:\r\n          <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          placeholder=\"111-11-11\"\r\n          onChange={event => setNumber(event.currentTarget.value)}\r\n          \r\n        />\r\n      </label>\r\n      <button type=\"submit\" >\r\n        Add contact\r\n        </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilter } from \"../Redux/Contacts/contacts-selectors\";\r\nimport * as actions from '../Redux/Contacts/contacts-actions';\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = (e) => {\r\n    dispatch(actions.changeFilter(e.target.value));\r\n  };\r\n  return (\r\n    <label>\r\n      Filter by name\r\n      <input type=\"text\" value={filter} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { getVisibleContacts } from \"../Redux/Contacts/contacts-selectors\";\r\nimport * as operations from '../Redux/Contacts/contacts-operations';\r\n\r\nfunction ContactList() {\r\n\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = id => dispatch(operations.deleteContact(id));\r\n\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} >\r\n          <p >\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n            \r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import \"react-toastify/dist/ReactToastify.css\";\r\nimport ContactForm from \"./components/Form\";\r\nimport Filter from \"./components/Filter\";\r\nimport ContactList from \"./components/ContactList\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n     \r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./components/Redux/store\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}